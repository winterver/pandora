ENTRY(_start)

SECTIONS
{
    /* It used to be universally recommended to use 1M as a start offset,
     * as it was effectively guaranteed to be available under BIOS systems.
     * However, UEFI has made things more complicated, and experimental data
     * strongly suggests that 2M is a safer place to load. In 2016, a new
     * feature was introduced to the multiboot2 spec to inform bootloaders
     * that a kernel can be loaded anywhere within a range of addresses and
     * will be able to relocate itself to run from such a loader-selected
     * address, in order to give the loader freedom in selecting a span of
     * memory which is verified to be available by the firmware, in order to
     * work around this issue. This does not use that feature, so 2M was
     * chosen as a safer option than the traditional 1M.
     * */
    . = 2M;

    .text BLOCK(4K) : ALIGN(4K)
    {
        *(.multiboot)
        *(.text)
    }

    /* Read-only data. */
    .rodata BLOCK(4K) : ALIGN(4K)
    {
        *(.rodata)
    }

    /* Read-write data (initialized) */
    .data BLOCK(4K) : ALIGN(4K)
    {
        *(.data)
    }

    /* Read-write data (uninitialized) and stack */
    .bss BLOCK(4K) : ALIGN(4K)
    {
        *(COMMON)
        *(.bss)
    }

    .got.plt BLOCK(4K) : ALIGN(4K)
    {
        *(.got.plt)
    }

    /* Sections that are not referenced above are appended here.
     * The linker won't discard them. */
}
